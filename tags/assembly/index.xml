<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>assembly on JiansLife</title>
    <link>https://chibataiki.github.io/tags/assembly/</link>
    <description>Recent content in assembly on JiansLife</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 01 Mar 2020 16:07:18 +0800</lastBuildDate><atom:link href="https://chibataiki.github.io/tags/assembly/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MIPS汇编note</title>
      <link>https://chibataiki.github.io/posts/mips-assembly-note/</link>
      <pubDate>Sun, 01 Mar 2020 16:07:18 +0800</pubDate>
      
      <guid>https://chibataiki.github.io/posts/mips-assembly-note/</guid>
      <description>特性 MIPS和ARM 一样是RISC精简指令集
延迟槽 MIPS I 引入了延迟槽机制,以减少各种指令后流水线的阻塞.
MIPS II 取消了延迟槽机制
MIPS III 是MIPS II的一个后向兼容的扩展,并支持64位.
MIPS &amp;hellip;
指令格式 指令:32bits byte : 8bits word: 4bits, halfword: 2bits
MIPS架构中, 指令分为三种类型,R型、I型和J型.
寄存器 Register Number Conventional Name Usage $0 $zero 硬编码为0 $1 $at 保留给汇编器 $2 - $3 $v0, $v1 保存函数返回值 $4 - $7 $a0 - $a3 存储参数 $8 - $15 $t0 - $t7 存储临时数据 $16 - $23 $s0 - $s7 保存寄存器,存储后面用到的数据 $24 - $25 $t8 - $t9 存储临时数据 $26 - $27 $k0 - $k1 为内核保留 $28 $gp 全局指针 $29 $sp 堆栈指针 $30 $fp 保存栈指针 $31 $ra 返回地址 算数指令 opt $dst, $src, [xx] : $dst = $src + [xx]</description>
    </item>
    
  </channel>
</rss>

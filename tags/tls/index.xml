<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>TLS on JiansLife</title>
    <link>https://chibataiki.github.io/tags/tls/</link>
    <description>Recent content in TLS on JiansLife</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 16 Jul 2020 18:12:05 +0800</lastBuildDate><atom:link href="https://chibataiki.github.io/tags/tls/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FREAK</title>
      <link>https://chibataiki.github.io/posts/freak/</link>
      <pubDate>Thu, 16 Jul 2020 18:12:05 +0800</pubDate>
      
      <guid>https://chibataiki.github.io/posts/freak/</guid>
      <description>introduction FREAK:(Factoring RSA Export Keys ) 在SSL/TLS协议中存在一种漏洞,允许中间人将ciphersuite中的RSA强度降低为EXPORT-grade(出口级别).
早期由于二战的因素,许多国家出于国家安全因素的考虑,从而限制加密技术的出口;美国政府对出口的加密算法存在限制, 根据法律将出口的RSA密钥长度减少为512bits.而512bit的RSA密钥解密的代价很小,允许美国可以解密国外的加密通讯.
受漏洞影响的相关库:
 OpenSSL :CVE-2015-0204 1.0.1-1.0.1j, 1.0.0-1.0.0o,0.9.8-0.9.8zc BoringSSL: versions before Nov 10, 2014 are vulnerable &amp;hellip;  在 OpenSSL 库中，s3_clnt.c 文件中的 ssl3_get_key_exchange 函数允许客户端使用弱RSA密钥对。攻击者可拦截受影响的客户端与服务器之间的HTTPS连接，并强制其使用弱加密。
patch部分: https://github.com/openssl/openssl/commit/ce325c60c74b0fa784f5872404b722e120e5cab0
攻击流程  client在发送的client hello中使用标准的RSA加密请求 MITM 劫持client hello,并将cipher suite 更改为 export-grade RSA,比如TLS_RSA_EXPORT_WITH_RC4_MD5,并传给server server在ServerCertificate中发送2048bits的公钥，接受export级别的cipher suite,并临时生成512bit的RSA公钥, 通过发送ServerKeyExchange message通知client,并使用证书的密钥对公钥进行签名 client端接受消息,验证证书, 生成 premaster key并通过server端的公钥进行加密 mitm attacker需要将512bit的公钥进行因数分解获得临时私钥, mitm 此时可以从clientkeyexchange中解密出pre-master secret 成功解密后attacker可以明文查看所有信息  检测方式:
 服务端:
openssl s_client -connect [server ip] -cipher EXPORT 客户端 https://clienttest.</description>
    </item>
    
  </channel>
</rss>

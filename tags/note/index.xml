<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>note on JiansLife</title>
    <link>https://chibataiki.github.io/tags/note/</link>
    <description>Recent content in note on JiansLife</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 29 Mar 2020 23:46:15 +0800</lastBuildDate><atom:link href="https://chibataiki.github.io/tags/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>shodan usage</title>
      <link>https://chibataiki.github.io/posts/shodan/</link>
      <pubDate>Sun, 29 Mar 2020 23:46:15 +0800</pubDate>
      
      <guid>https://chibataiki.github.io/posts/shodan/</guid>
      <description>过滤 include:
filtername:&amp;quot;value&amp;quot;
exclude: - or ! -filtername:&amp;quot;value&amp;quot;
筛选多值: , port: 22,23
Filter: hash hash值为shodan data域的hash
banner text为空的时候,hash值为0
hash:0 Filter: http.html_hash html的hash
很多header存在Date值,此时使用hash值进行过滤就存在 漏报,可以采用http.html的hash值进行过滤
http.html_hash:[hash value] 其他过滤规则类似,可以看raw数据进行筛选
favicon hash值的计算 import mmh3 import requests response = requests.get(&#39;https://website/favicon.ico&#39;) favicon = response.content.encode(&#39;base64&#39;) hash = mmh3.hash(favicon) print(hash)  CLI shodan提供cli接口
python3 -m pip install shodan shodan download [quary] shodan parse --fields ip_str,port,[fields] --separator , [download_file] shodan search --fields ip_str,port,[fields] [quary] ...  referer:
https://help.shodan.io/mastery/property-hashes</description>
    </item>
    
  </channel>
</rss>

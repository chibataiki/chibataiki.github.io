<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IoT on Jian&#39;s Life</title>
    <link>http://example.org/tags/iot/</link>
    <description>Recent content in IoT on Jian&#39;s Life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2020 13:28:16 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Qemu User Mode 配置</title>
      <link>http://example.org/post/qemu-user-mode-%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 28 Feb 2020 13:28:16 +0800</pubDate>
      
      <guid>http://example.org/post/qemu-user-mode-%E9%85%8D%E7%BD%AE/</guid>
      <description>qemu 虚拟机里的安装的debian是wheey 版本
添加源 nano /etc/apt/source
deb http://archive.debian.org/debian wheezy main
安装qemu-mips-static/qemu-mipsel-static/qemu-arm-static
sudo apt-get install qemu-user-static
运行二进制程序:
chroot . ./qemu-[arch]-static [-g port] [binary_name]</description>
    </item>
    
    <item>
      <title>QEMU系统模式仿真</title>
      <link>http://example.org/post/qemu-system-mode-setting/</link>
      <pubDate>Thu, 27 Feb 2020 14:03:02 +0800</pubDate>
      
      <guid>http://example.org/post/qemu-system-mode-setting/</guid>
      <description>主要是对MIPS ARM架构的嵌入式设备进行仿真
系统仿真在大多数时候并不是一种很好的选择,因为不能保证完美的仿真硬件
0x00 QEMU 系统模式的仿真方式 系统模式下的引导需要提供内核,文件系统,文件系统使用binwalk等工具可以相对方便的获取, 但是内核比较麻烦. 所以大致有三种系统仿真方式
1.从设备中提取内核,并将提取出的文件系统制作成镜像,从镜像中启动. 这种方式最接近物理设备但是内核的提取不容易,是否能成功启动也另说.
2.使用一个同架构(MIPS,ARM)预编译的内核,使用固件提取的文件做成镜像进行启动. 相对容易,但是让仿真成功进行也比较麻烦.
3.使用一个同架构(MIPS,ARM)预编译的内核,以及预编译的系统镜像. 在系统成功启动后,将固件提取的文件系统拷贝到虚拟机中,使用 chroot 进行允许. 虽然不够贴近物理设备但是比较容易实现
这里选择第3种.</description>
    </item>
    
    <item>
      <title>Netcore-igdmptd-后门漏洞分析</title>
      <link>http://example.org/post/netcore_igdmptd_backdoor_analysis/</link>
      <pubDate>Thu, 27 Feb 2020 13:53:04 +0800</pubDate>
      
      <guid>http://example.org/post/netcore_igdmptd_backdoor_analysis/</guid>
      <description>磊科路由器中内置了一个IGDMPTD的程序, 在外网上打开UDP端口53413 并进行监听. 后门采用硬编码的密码,允许攻击者在路由器上执行任意代码.
知道了这些之后,进行分析
仿真:
使用qemu 系统模式作为测试环境
固件: https://github.com/rapid7/metasploit-framework/files/267284/vuln_squashfs-root.tar.gz
scp -P 22 vuln_squashfs-root.tar.gz root@[target_ip]:/root tar xvf vuln_squashfs-root.tar.gz cd squashfs-root chroot .</description>
    </item>
    
  </channel>
</rss>